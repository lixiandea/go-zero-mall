// Code generated by goctl. DO NOT EDIT!
// Source: note.proto

package note

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Note interface {
		GetNote(ctx context.Context, in *GetNoteRequest, opts ...grpc.CallOption) (*GetNoteResponse, error)
		CreateNote(ctx context.Context, in *CreateNoteRequest, opts ...grpc.CallOption) (*CreateNoteResponse, error)
		UpdateNote(ctx context.Context, in *UpdateNoteRequest, opts ...grpc.CallOption) (*UpdateNoteResponse, error)
		DeleteNote(ctx context.Context, in *DeleteNoteRequest, opts ...grpc.CallOption) (*DeleteNoteResponse, error)
	}

	defaultNote struct {
		cli zrpc.Client
	}
)

func NewNote(cli zrpc.Client) Note {
	return &defaultNote{
		cli: cli,
	}
}

func (m *defaultNote) GetNote(ctx context.Context, in *GetNoteRequest, opts ...grpc.CallOption) (*GetNoteResponse, error) {
	client := NewNoteClient(m.cli.Conn())
	return client.GetNote(ctx, in, opts...)
}

func (m *defaultNote) CreateNote(ctx context.Context, in *CreateNoteRequest, opts ...grpc.CallOption) (*CreateNoteResponse, error) {
	client := NewNoteClient(m.cli.Conn())
	return client.CreateNote(ctx, in, opts...)
}

func (m *defaultNote) UpdateNote(ctx context.Context, in *UpdateNoteRequest, opts ...grpc.CallOption) (*UpdateNoteResponse, error) {
	client := NewNoteClient(m.cli.Conn())
	return client.UpdateNote(ctx, in, opts...)
}

func (m *defaultNote) DeleteNote(ctx context.Context, in *DeleteNoteRequest, opts ...grpc.CallOption) (*DeleteNoteResponse, error) {
	client := NewNoteClient(m.cli.Conn())
	return client.DeleteNote(ctx, in, opts...)
}
