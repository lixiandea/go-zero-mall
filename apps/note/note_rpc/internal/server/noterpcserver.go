// Code generated by goctl. DO NOT EDIT!
// Source: note_rpc.proto

package server

import (
	"context"

	"github.com/lixiandea/go-zero-mall/apps/note/note_rpc/internal/logic"
	"github.com/lixiandea/go-zero-mall/apps/note/note_rpc/internal/svc"
	"github.com/lixiandea/go-zero-mall/apps/note/note_rpc/note_rpc"
)

type NoteRpcServer struct {
	svcCtx *svc.ServiceContext
	note_rpc.UnimplementedNoteRpcServer
}

func NewNoteRpcServer(svcCtx *svc.ServiceContext) *NoteRpcServer {
	return &NoteRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *NoteRpcServer) UpdateNote(ctx context.Context, in *note_rpc.UpdateNoteRequest) (*note_rpc.UpdateNoteResponse, error) {
	l := logic.NewUpdateNoteLogic(ctx, s.svcCtx)
	return l.UpdateNote(in)
}

func (s *NoteRpcServer) DeleteNote(ctx context.Context, in *note_rpc.DeleteNoteRequest) (*note_rpc.DeleteNoteResponse, error) {
	l := logic.NewDeleteNoteLogic(ctx, s.svcCtx)
	return l.DeleteNote(in)
}

func (s *NoteRpcServer) AddNote(ctx context.Context, in *note_rpc.AddNoteRequest) (*note_rpc.AddNoteResponse, error) {
	l := logic.NewAddNoteLogic(ctx, s.svcCtx)
	return l.AddNote(in)
}

func (s *NoteRpcServer) GetNote(ctx context.Context, in *note_rpc.GetNoteRequest) (*note_rpc.GetNoteResponse, error) {
	l := logic.NewGetNoteLogic(ctx, s.svcCtx)
	return l.GetNote(in)
}
