// Code generated by goctl. DO NOT EDIT!
// Source: note_rpc.proto

package noterpc

import (
	"context"

	"github.com/lixiandea/go-zero-mall/apps/note/note_rpc/note_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddNoteRequest     = note_rpc.AddNoteRequest
	AddNoteResponse    = note_rpc.AddNoteResponse
	DeleteNoteRequest  = note_rpc.DeleteNoteRequest
	DeleteNoteResponse = note_rpc.DeleteNoteResponse
	GetNoteRequest     = note_rpc.GetNoteRequest
	GetNoteResponse    = note_rpc.GetNoteResponse
	UpdateNoteRequest  = note_rpc.UpdateNoteRequest
	UpdateNoteResponse = note_rpc.UpdateNoteResponse

	NoteRpc interface {
		UpdateNote(ctx context.Context, in *UpdateNoteRequest, opts ...grpc.CallOption) (*UpdateNoteResponse, error)
		DeleteNote(ctx context.Context, in *DeleteNoteRequest, opts ...grpc.CallOption) (*DeleteNoteResponse, error)
		AddNote(ctx context.Context, in *AddNoteRequest, opts ...grpc.CallOption) (*AddNoteResponse, error)
		GetNote(ctx context.Context, in *GetNoteRequest, opts ...grpc.CallOption) (*GetNoteResponse, error)
	}

	defaultNoteRpc struct {
		cli zrpc.Client
	}
)

func NewNoteRpc(cli zrpc.Client) NoteRpc {
	return &defaultNoteRpc{
		cli: cli,
	}
}

func (m *defaultNoteRpc) UpdateNote(ctx context.Context, in *UpdateNoteRequest, opts ...grpc.CallOption) (*UpdateNoteResponse, error) {
	client := note_rpc.NewNoteRpcClient(m.cli.Conn())
	return client.UpdateNote(ctx, in, opts...)
}

func (m *defaultNoteRpc) DeleteNote(ctx context.Context, in *DeleteNoteRequest, opts ...grpc.CallOption) (*DeleteNoteResponse, error) {
	client := note_rpc.NewNoteRpcClient(m.cli.Conn())
	return client.DeleteNote(ctx, in, opts...)
}

func (m *defaultNoteRpc) AddNote(ctx context.Context, in *AddNoteRequest, opts ...grpc.CallOption) (*AddNoteResponse, error) {
	client := note_rpc.NewNoteRpcClient(m.cli.Conn())
	return client.AddNote(ctx, in, opts...)
}

func (m *defaultNoteRpc) GetNote(ctx context.Context, in *GetNoteRequest, opts ...grpc.CallOption) (*GetNoteResponse, error) {
	client := note_rpc.NewNoteRpcClient(m.cli.Conn())
	return client.GetNote(ctx, in, opts...)
}
