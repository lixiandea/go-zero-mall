// Code generated by goctl. DO NOT EDIT!
// Source: user_rpc.proto

package server

import (
	"context"

	"github.com/lixiandea/go-zero-mall/apps/user/user_rpc/internal/logic"
	"github.com/lixiandea/go-zero-mall/apps/user/user_rpc/internal/svc"
	"github.com/lixiandea/go-zero-mall/apps/user/user_rpc/user_rpc"
)

type UserRpcServer struct {
	svcCtx *svc.ServiceContext
	user_rpc.UnimplementedUserRpcServer
}

func NewUserRpcServer(svcCtx *svc.ServiceContext) *UserRpcServer {
	return &UserRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *UserRpcServer) UserRegister(ctx context.Context, in *user_rpc.UserRegisterRequest) (*user_rpc.UserRegisterResponse, error) {
	l := logic.NewUserRegisterLogic(ctx, s.svcCtx)
	return l.UserRegister(in)
}

func (s *UserRpcServer) UserLogin(ctx context.Context, in *user_rpc.UserLoginRequest) (*user_rpc.UserLoginResponse, error) {
	l := logic.NewUserLoginLogic(ctx, s.svcCtx)
	return l.UserLogin(in)
}

func (s *UserRpcServer) UserUpdate(ctx context.Context, in *user_rpc.UserUpdateRequest) (*user_rpc.UserUpdateResponse, error) {
	l := logic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

func (s *UserRpcServer) UserDelete(ctx context.Context, in *user_rpc.UserDeleteRequest) (*user_rpc.UserDeleteResponse, error) {
	l := logic.NewUserDeleteLogic(ctx, s.svcCtx)
	return l.UserDelete(in)
}

func (s *UserRpcServer) UserList(ctx context.Context, in *user_rpc.UserListRequest) (*user_rpc.UserListResponse, error) {
	l := logic.NewUserListLogic(ctx, s.svcCtx)
	return l.UserList(in)
}

func (s *UserRpcServer) UserSearch(ctx context.Context, in *user_rpc.UserSearchRequest) (*user_rpc.UserSearchResponse, error) {
	l := logic.NewUserSearchLogic(ctx, s.svcCtx)
	return l.UserSearch(in)
}

func (s *UserRpcServer) UserInfo(ctx context.Context, in *user_rpc.UserInfoRequest) (*user_rpc.UserInfoResponse, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}
