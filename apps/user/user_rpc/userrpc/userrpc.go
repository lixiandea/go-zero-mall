// Code generated by goctl. DO NOT EDIT!
// Source: user_rpc.proto

package userrpc

import (
	"context"

	"github.com/lixiandea/go-zero-mall/apps/user/user_rpc/user_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserDeleteRequest    = user_rpc.UserDeleteRequest
	UserDeleteResponse   = user_rpc.UserDeleteResponse
	UserInfo             = user_rpc.UserInfo
	UserInfoRequest      = user_rpc.UserInfoRequest
	UserInfoResponse     = user_rpc.UserInfoResponse
	UserListRequest      = user_rpc.UserListRequest
	UserListResponse     = user_rpc.UserListResponse
	UserLoginRequest     = user_rpc.UserLoginRequest
	UserLoginResponse    = user_rpc.UserLoginResponse
	UserRegisterRequest  = user_rpc.UserRegisterRequest
	UserRegisterResponse = user_rpc.UserRegisterResponse
	UserSearchRequest    = user_rpc.UserSearchRequest
	UserSearchResponse   = user_rpc.UserSearchResponse
	UserUpdateRequest    = user_rpc.UserUpdateRequest
	UserUpdateResponse   = user_rpc.UserUpdateResponse

	UserRpc interface {
		UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*UserRegisterResponse, error)
		UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error)
		UserUpdate(ctx context.Context, in *UserUpdateRequest, opts ...grpc.CallOption) (*UserUpdateResponse, error)
		UserDelete(ctx context.Context, in *UserDeleteRequest, opts ...grpc.CallOption) (*UserDeleteResponse, error)
		UserList(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error)
		UserSearch(ctx context.Context, in *UserSearchRequest, opts ...grpc.CallOption) (*UserSearchResponse, error)
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	}

	defaultUserRpc struct {
		cli zrpc.Client
	}
)

func NewUserRpc(cli zrpc.Client) UserRpc {
	return &defaultUserRpc{
		cli: cli,
	}
}

func (m *defaultUserRpc) UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*UserRegisterResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}

func (m *defaultUserRpc) UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}

func (m *defaultUserRpc) UserUpdate(ctx context.Context, in *UserUpdateRequest, opts ...grpc.CallOption) (*UserUpdateResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserUpdate(ctx, in, opts...)
}

func (m *defaultUserRpc) UserDelete(ctx context.Context, in *UserDeleteRequest, opts ...grpc.CallOption) (*UserDeleteResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserDelete(ctx, in, opts...)
}

func (m *defaultUserRpc) UserList(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserList(ctx, in, opts...)
}

func (m *defaultUserRpc) UserSearch(ctx context.Context, in *UserSearchRequest, opts ...grpc.CallOption) (*UserSearchResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserSearch(ctx, in, opts...)
}

func (m *defaultUserRpc) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user_rpc.NewUserRpcClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}
